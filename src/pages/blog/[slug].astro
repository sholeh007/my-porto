---
import { Icon } from "astro-icon/components"
import { getCollection } from "astro:content"
import MainLayout from "../../layouts/Default.astro"

export async function getStaticPaths() {
  const posts = await getCollection("blog")
  return posts.map((post) => ({
    params: { slug: decodeURI(post.slug) },
    props: { post },
  }))
}

const { post } = Astro.props
const { Content } = await post.render()
---

<MainLayout>
  <div class='mt-8 mb-12' slot='blog'>
    <a href='/blog' class='text-zinc-400 hover:text-zinc-200 inline-flex mb-8'>
      <Icon name='lucide:arrow-left' class='size-6' />
      Back to blog
    </a>
    <h1 class='text-zinc-100 text-2xl md:text-3xl font-bold'>{post.data.title}</h1>
    <div class='flex mb-8 mt-2 gap-x-2 items-center text-zinc-400'>
      <p><span id='reading-time'></span> min read</p>
      <span>&bull;</span>
      <time>
        {post.data.publishDate.toISOString().slice(0, 10)}
      </time>
    </div>
    <article
      class='prose prose-zinc prose-p:text-justify dark:prose-invert prose-h3:font-bold prose-h3:text-lg prose-p:text-zinc-200 prose-p:text-lg prose-p:md:text-xl max-w-none'
    >
      <Content />
    </article>
  </div>
</MainLayout>

<script>
  document.addEventListener("astro:page-load", () => {
    const text = document.querySelector("article")?.innerText
    const readingTime = document.querySelector("#reading-time")
    const wpm = 225
    const words = text?.trim().split(/\s+/g).length
    if (words !== undefined) {
      const time = Math.ceil(words / wpm)
      // ! Non-null assertion operator
      readingTime!.innerHTML = time + ""
    }
  })
</script>
